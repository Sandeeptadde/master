{
	"name": "parse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "json_file",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Parse1"
				},
				{
					"name": "Flatten1"
				},
				{
					"name": "Parse2"
				},
				{
					"name": "Flatten2"
				},
				{
					"name": "Flatten3"
				}
			],
			"script": "source(output(\n\t\tid as string,\n\t\ttype as string,\n\t\tname as string,\n\t\tppu as double,\n\t\tbatters as (batter as (id as string, type as string)[]),\n\t\ttopping as (id as string, type as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'arrayOfDocuments') ~> source1\nsource1 parse(json_data_column_parsed = id ? (id as string,\n\t\ttype as string,\n\t\tname as string,\n\t\tppu as float,\n\t\ttopping as (id as string, type as string)[],\n\t\tbatters as string),\n\tformat: 'json',\n\tdocumentForm: 'arrayOfDocuments') ~> Parse1\nParse1 foldDown(unroll(topping),\n\tmapColumn(\n\t\tid,\n\t\ttype,\n\t\tname,\n\t\tppu,\n\t\tbatters,\n\t\ttopping,\n\t\tjson_data_column_parsed\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Flatten1\nFlatten1 parse(topping = topping ? (id as string,\n\t\ttype as string),\n\t\tbatters = batters ? (batter as string[]),\n\tformat: 'json',\n\tdocumentForm: 'arrayOfDocuments') ~> Parse2\nsource1 foldDown(unroll(topping),\n\tmapColumn(\n\t\tid,\n\t\ttype,\n\t\tname,\n\t\tppu,\n\t\tbatters,\n\t\ttopping_id = topping.id,\n\t\ttopping_type = topping.type\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Flatten2\nFlatten2 foldDown(unroll(batters.batter),\n\tmapColumn(\n\t\tid,\n\t\ttype,\n\t\tname,\n\t\tppu,\n\t\tbatters_id = batters.batter.id,\n\t\tbatter_type = batters.batter.type,\n\t\ttopping_id,\n\t\ttopping_type\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten3\nFlatten3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}